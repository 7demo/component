#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander')
  , Builder = require('component-builder')
  , component = require('..')
  , utils = component.utils
  , log = component.utils.log
  , path = require('path')
  , fs = require('fs')
  , mkdir = require('mkdirp');

// options

program
  .option('-o, --out <dir>', 'output directory defaulting to ./build', 'build')
  .option('-v, --verbose', 'output verbose build information')

// examples

program.on('--help', function(){
  console.log('  Examples:');
  console.log();
  console.log('    # build to ./build');
  console.log('    $ component build');
  console.log();
  console.log('    # build to ./dist');
  console.log('    $ component build -o dist');
  console.log();
});

// parse argv

program.parse(process.argv);

// load json

var conf = require(path.resolve('component.json'));

// mkdir -p

mkdir.sync(program.out);

// output streams

var js = fs.createWriteStream(path.join(program.out, 'build.js'));
var css = fs.createWriteStream(path.join(program.out, 'build.css'));

// build

var builder = new Builder('.');
var start = new Date;

if (program.verbose) console.log();
builder.build(function(err, obj){
  if (err) utils.fatal(err.message);

  css.write(obj.css);
  js.write(obj.require);
  js.write(obj.js);

  if (!program.verbose) return;
  var duration = new Date - start;
  log('write', js.path);
  log('write', css.path);
  log('js', (obj.js.length / 1024 | 0) + 'kb');
  log('css', (obj.css.length / 1024 | 0) + 'kb');
  log('duration', duration + 'ms');
  console.log();
});