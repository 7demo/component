#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander')
  , component = require('..')
  , spawn = require('child_process').spawn
  , which = require('which').sync
  , fs = require('fs')
  , exists = fs.existsSync;

// usage

program.usage('<command> [options]');

// sub-command help

program.on('--help', function(){
  console.log('  Commands:');
  console.log();
  console.log('    install <name ...>   install one or more components');
  console.log('    create <dir>         create a component skeleton');
  console.log('    search [query]       search with the given query');
  console.log('    convert <file ...>   convert html files to js modules');
  console.log('    info [prop]          output json component information');
  console.log('    ls                   list installed components');
  console.log();
  process.exit();
});

// parse argv

program.parse(process.argv);

// args void of cmd

var args = process.argv.slice(3);

// command

var cmd = program.args[0];

// alias "install" as "add"

if ('add' == cmd) cmd = 'install';

// display help

if (!cmd) {
  process.stdout.write(program.helpInformation());
  program.emit('--help');
  process.exit();
}

// command

cmd = 'component-' + cmd;

// which(1) it

try {
  var bin = which(cmd);
} catch (err) {
  // TODO: err.code missing ... patch which
  component.utils.fatal('the "' + cmd + '" command does not exist');
}

// exec command

var proc = spawn(cmd, args, { customFds: [1, -1, -1] });
proc.stdout.pipe(process.stdout);
proc.stderr.pipe(process.stderr);
proc.on('exit', process.exit);
