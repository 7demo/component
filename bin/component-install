#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander')
  , component = require('..')
  , path = require('path');

// options

program
  .usage('[pkg ...]')
  .option('-o, --out <dir>', 'output components to the given <dir>')
  .option('-f, --force', 'force installation even if previously installed')

// examples

program.on('--help', function(){
  console.log('  Examples:');
  console.log();
  console.log('    # install deps in ./component.json');
  console.log('    $ component install');
  console.log();
  console.log('    # install a single component');
  console.log('    $ component install component/tip');
  console.log();
  console.log('    # install several components');
  console.log('    $ component install component/tip component/popover');
  console.log();
  console.log('    # shell brace expansion ftw');
  console.log('    $ component install component/{tip,popover,dialog}');
  console.log();
  console.log('    # install a specific tag / sha');
  console.log('    $ component install component/tip@8bf1ffc3f');
  console.log();
});

// parse argv

program.parse(process.argv);

// pkgs

var pkgs = program.args;

// install from ./component.json

if (!pkgs.length) {
  pkgs = require(path.resolve('component.json')).dependencies;
  if (!pkgs) return;
  pkgs = Object.keys(pkgs).map(function(name){
    return name + '@' + pkgs[name]; 
  });
}

// install

pkgs.forEach(function(pkg){
  var parts = pkg.split('@');
  pkg = parts.shift();
  var version = parts.shift() || 'master';
  pkg = component.install(pkg, version, { dest: program.out, force: program.force });
  component.terse(pkg);
  pkg.install();
});

